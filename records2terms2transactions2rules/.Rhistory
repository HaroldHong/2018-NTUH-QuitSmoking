#plot(pie)
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
#plot(pie)
ggplot(Medicine1data, aes( fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
source('C:/Users/Harold/Desktop/台大医院/category.R', encoding = 'UTF-8', echo=TRUE)
#plot(pie)
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
categ_table
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
Medicine1data <- effectivedata[effectivedata$處方品名.1. == "Nicorette Freshmint medicated Chewing Gum 2mg",]
Medicine2data <- effectivedata[effectivedata$處方品名.1. == "Nicotinell TTS 30" | selectdata$處方品名.1. == "Nicotinell TTS 20",]
Medicine1data <- effectivedata[effectivedata$處方品名.1. == "Nicorette Freshmint medicated Chewing Gum 2mg",]
Medicine2data <- effectivedata[effectivedata$處方品名.1. == "Nicotinell TTS 30" | selectdata$處方品名.1. == "Nicotinell TTS 20",]
Medicine3data <- effectivedata[effectivedata$處方品名.1. == "Champix film coated tablet 1.0mg",]
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
var <- Medicine3data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$category <- factor(rep(names(categ_table), categ_table))
var <- Medicine1data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$category <- factor(rep(names(categ_table), categ_table))
ggplot(Medicine1data, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Waffle Chart",caption = "Source: Medicine1data" )
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Nicorette Freshmint medicated Chewing Gum 2mg",caption = "Source: Medicine1data" )
var <- Medicine2data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Nicorette Freshmint medicated Chewing Gum 2mg",caption = "Source: Medicine1data" )
var <- Medicine3data$class
nrows <- 10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(var) * ((nrows*nrows)/(length(var))))
categ_table
df$class <- factor(rep(names(categ_table), categ_table))
ggplot(df, aes(x = x ,y = y, fill = class)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
scale_fill_brewer(palette = "Set3") +
labs(title ="Champix film coated tablet 1.0mg",caption = "Source: Medicine1data" )
df1_1 <- Medicine1data[Medicine1data$assessment == 0,]
df1_2 <- Medicine1data[Medicine1data$assessment >0 &Medicine1data$assessment<5,]
df1_3 <- Medicine1data[Medicine1data$assessment >5 &Medicine1data$assessment<10,]
df1_4 <- Medicine1data[Medicine1data$assessment >10,]
df2_1 <- Medicine2data[Medicine2data$assessment == 0,]
df2_2 <- Medicine2data[Medicine2data$assessment >0 &Medicine2data$assessment<5,]
df2_3 <- Medicine2data[Medicine2data$assessment >5 &Medicine2data$assessment<10,]
df2_4 <- Medicine2data[Medicine2data$assessment >10,]
df3_1 <- Medicine3data[Medicine3data$assessment == 0,]
df3_2 <- Medicine3data[Medicine3data$assessment >0 &Medicine3data$assessment<5,]
df3_3 <- Medicine3data[Medicine3data$assessment >5 &Medicine3data$assessment<10,]
df3_4 <- Medicine3data[Medicine3data$assessment >10,]
write.csv(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院")
write.csv(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
library(data.table)
install.packages('data.table')
library(data.table)
install.packages("data.table")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
install.packages("data.table")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
library(data.table)
install.packages('data.table')
library(data.table)
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
fwrite(df1_1,"C:\\Users\\Harold\\Desktop\\台大医院\\df1_1.csv")
library(readxl)
library(jiebaRD)
library(jiebaR)
library(zoo)
library(plyr)
library(wordcloud2)
#get top num
topsort <- function(x,num = 0)
{
top <- count(x)
top <- top[order(top$freq,decreasing = T),]
if(num > 0){
return(top[1:num,])
}
else return(top)
}
jobdf <- read_excel("jobdata.xlsx",sheet = 1)
jobdf <- jobdf[,c("scale","scale2","salary","title","experience",
"education","campany","description","phase","city" )]
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
install.packages('tm')
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
install.packages('NLP')
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week4/hw_4/datamining.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
url <- "https://blog.csdn.net/qq_38208281/article/details/76797581"
web <- read_html(url,encoding = "utf-8")
name <- web%>%html_nodes('')%>%html_text()
name
name <- web%>%html_nodes('')%>%html_text()
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
URL
url
URL <- unlist(lapply(url,str_extract_all,'http\\S+'))
URL
url <- xpathApply(u1,'//div[@class="box-result clearfix"]/*/*/a',xmlValue)
url
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
write.csv(goldNews,file = 'D:\\gold_0801.csv',row.names = F)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
write.csv(goldNews,file = 'D:\\gold_0801.csv',row.names = F,col.names = F)
write.csv(goldNews,file = 'D:\\gold_0801.csv',row.names = T)
write.csv(goldNews,file = 'C://Users//Harold//Documents//GitHub//Data-Science-and-programing//week5//news_0801.csv',row.names = F)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/GitHub/Data-Science-and-programing/week5/test1014.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(docx)
source('~/GitHub/Data-Science-and-programing/week5/TDManalyse.R', echo=TRUE)
View(docx)
View(docs)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
writeCorpus(docs,path = "D:\\Corpus")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rawdata<- readtext("*.txt")
library(tm)
library(tidytext)
library(NLP)
rawdata<- readtext("*.txt")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(rawdata)
text <- Corpus(VectorSource(rawdata$text))
summary(text)
writeCorpus(docs,path = "D:\\Corpus")
docs <- Corpus(DirSource("C:\\Users\\Harold\\Documents\\GitHub\\Data-Science-and-programing\\week5"),readerControl = list(language = "zho"))
writeCorpus(docs,path = "D:\\Corpus")
inspect(docs[1:2])
writeLines(as.character(docs[[1]]))
summary(seg)
seg = lapply(docs, jieba_tokenizer)
source('~/.active-rstudio-document', echo=TRUE)
summary(seg)
source('~/.active-rstudio-document', echo=TRUE)
s.dtm <- DocumentTermMatrix(seg)
d.corpus <- Corpus(VectorSource(seg))
s.dtm <- DocumentTermMatrix(d.corpus)
inspect(s.dtm)
print(tf <- as.matrix(s.dtm))
wordcloud(d$word,d$freq,min.freq = 20 , random.order = F,ordered.colors = F,
clolors = rainbow(length(row.names(m1))))
library(RColorBrewer)
library(wordcloud)
m1 <- as.matrix(s.dtm)
v <- sort(rowSums(m1),decreasing = T)
d <- data.frame(word = names(v),freq = v)
wordcloud(d$word,d$freq,min.freq = 20 , random.order = F,ordered.colors = F,
clolors = rainbow(length(row.names(m1))))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('jsonlite')
library(rjson)
library(jsonlite)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\1026.json"
#json_data <- fromJSON(file = filepath)
json_data <- stream_in(file(filepath),pagesize = 50)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\1026.json"
#json_data <- fromJSON(file = filepath)
json_data <- fromJSON(paste(readLines(filepath),collapse = ""))
library(rjson)
library(jsonlite)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\1026.json"
#json_data <- fromJSON(file = filepath)
json_data <- fromJSON(paste(readLines(filepath),collapse = ""))
library(rjson)
library(jsonlite)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\1026.json"
#json_data <- fromJSON(file = filepath)
#json_data <- fromJSON(paste(readLines(filepath),collapse = ""))
json_data <- jsonlite::fromJSON(txt = filepath)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
words <- paste(string,sep="")
print(words)
library(stringr)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
print(string)
words <- paste(string,sep="")
print(words)
mode(string)
words <- unlist(string)
print(words)
library(stringr)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
print(string)
words <- unlist(string)
words <- paste(string,sep="")
print(words)
library(stringr)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
print(string)
words <- unlist(string)
print(words)
# string <- str_replace(string," ","")
# print(string)
gsub("[\r\n]","",words)
words <- unlist(words)
words <- str_replace(words,"[\u4E00-\u9FA5]+","")
print(words)
words <- unlist(words)
write.table(words,"C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\words.txt")
words <- unlist(words)
print(words)
library(stringr)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
print(string)
words <- unlist(string)
print(words)
# string <- str_replace(string," ","")
# print(string)
gsub("[\r\n]","",words)
words <- unlist(words)
words <- str_replace(words,"[\u4E00-\u9FA5]+","")
print(words)
words <- unlist(words)
print(words)
write.table(words,"C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\words.txt")
str <- "555"
mode(str)
words <- as.character(words)
print(words)
write.table(words,"C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\words.txt")
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
print(string)
words <- as.character(string)
print(words)
library(stringr)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
string <- read.table(filepath,sep = "")
library(stringr)
library(NLP)
library(readtext)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
docs <- readtext(filepath,encoding = "big5")
docs
library(tm)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\test.txt"
docs <- readtext(filepath,encoding = "big5")
library(stringr)
library(NLP)
library(readtext)
library(tm)
filepath <- "C:\\Users\\Harold\\Desktop\\ntuh\\RESTfulAPI.client\\Java\\class_1_1"
ovid <- Corpus(DirSource(filepath),readerControl = list(language = "zho"))
head(ovid)
inspect(ovid)
source('~/.active-rstudio-document', echo=TRUE)
writeLines(as.character(docs[[1]]))
inspect(docs[[1]])
writeLines(as.character(docs[[2]]))
inspect(docs[[2]])
writeLines(as.character(docs))
source('C:/Users/Harold/Desktop/ntuh/RESTfulAPI.client/Java/raw1_1/crawlMESH.R', echo=TRUE)
source('C:/Users/Harold/Desktop/ntuh/RESTfulAPI.client/Java/raw1_1/crawlMESH.R', echo=TRUE)
utils:::menuInstallLocal()
q()
q()
utils:::menuInstallLocal()
q()
setwd("C:\\Users\\Harold\\Desktop\\WordExtract")
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
top.vegie.rules <- sort(ordered_myRules2,
by = c("support","lift"))[1:20]
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.8,
lwd = 2)
write(ordered_myRules2,fileEncoding = "UTF-8",sep=",",quote=TRUE,file = "./class4Rules_Check.csv",row.names=FALSE)
top.vegie.rules <- sort(ordered_myRules2,
by = c("support","lift"))[1:30]
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.8,
lwd = 2)
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.5,
lwd = 2)
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.7,
lwd = 2)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
top.vegie.rules <- sort(ordered_myRules2,
by = c("support","lift"))[1:15]
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.7,
lwd = 2)
top.vegie.rules <- sort(ordered_myRules2,
by = c("support","lift"))[1:50]
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.7,
lwd = 2)
top.vegie.rules <- sort(ordered_myRules2,
by = c("support","lift"))[1:45]
plot(top.vegie.rules,measure="support",
method="graph",
shading="lift",
cex = 0.7,
lwd = 2)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
myRules <- apriori(transactions,
parameter = list(support = 0.03,
confidence = 0.4,
minlen = 2,maxtime = 0,maxline = 20))
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/Apriori.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/Harold/Desktop/WordExtract/apriori_1.R', encoding = 'UTF-8', echo=TRUE)
